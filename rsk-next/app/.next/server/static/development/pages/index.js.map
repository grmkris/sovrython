{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./pages/index.js","webpack:///./static/styles/index-styles.js","webpack:///./utils/web3-util.js","webpack:///external \"react\"","webpack:///external \"react-bootstrap/Button\"","webpack:///external \"react-bootstrap/Form\"","webpack:///external \"react-bootstrap/Spinner\"","webpack:///external \"web3\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import styles from '../static/styles/index-styles';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Spinner from 'react-bootstrap/Spinner';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState, useEffect } from 'react';\nimport {web3Mainnet, web3Testnet, getSimpleStorageValue, getTimeStamp} from '../utils/web3-util';\n\nfunction Index(props) {\n  const UpdateButton = () => (\n    <Button variant=\"success\" onClick={() => updateNetworkData()}>\n      Update\n    </Button>\n  );\n\n  const [mainnetBlock, setMainnetBlock] = useState(1);\n  const [testnetBlock, setTestnetBlock] = useState(1);\n  const [simpleStorageValue, setSimpleStorageValue] = useState(1);\n  const [timestamp, setTimestamp] = useState(1);\n\n  const [updateComponent, setUpdateComponent] = useState(<UpdateButton />);\n  const [bestBlockLoading, setBestBlockLoading] = useState(true);\n\n  useEffect(() => {\n    const initNetworkData = async () => {\n      const mainnetBestBlock = await web3Mainnet.eth.getBlockNumber();\n      const testnetBestBlock = await web3Testnet.eth.getBlockNumber();\n      const networkSimpleStorageValue = await getSimpleStorageValue();\n      const networkTimestamp = await getTimeStamp();\n      setSimpleStorageValue(networkSimpleStorageValue.toNumber());\n      setTimestamp(networkTimestamp.toNumber());\n      setMainnetBlock(mainnetBestBlock);\n      setTestnetBlock(testnetBestBlock);\n      setBestBlockLoading(false);\n    }\n    initNetworkData()\n  }, []);\n\n  async function updateNetworkData() {\n    setUpdateComponent(<Spinner animation=\"border\" variant=\"success\" />);\n    setMainnetBlock(await web3Mainnet.eth.getBlockNumber());\n    setTestnetBlock(await web3Testnet.eth.getBlockNumber());\n    setSimpleStorageValue(0);\n    setSimpleStorageValue((await getSimpleStorageValue()).toNumber());\n    setTimestamp((await getTimeStamp()).toNumber());\n    setUpdateComponent(<UpdateButton />);\n  }\n\n  const NetworkData = props => {\n    return (\n      <>\n        {!props.loading ? (\n          <div>\n            <h4>Mainnet best block {props.mainnetBlock}</h4>\n            <br />\n            <h4>Testnet best block {props.testnetBlock}</h4>\n            <br />\n            <h4>Simple Storage Value {props.simpleStorageValue}</h4>\n            <br/>\n            <h4>Timestamp {props.timestamp}</h4>\n          </div>\n        ) : (\n          <Spinner animation=\"border\" variant=\"success\" />\n        )}\n      </>\n    );\n  };\n\n  return (\n    <div className=\"body\">\n      {styles}\n      <div>\n        <img className=\"rsk-logo\" />\n      </div>\n      <h1 className=\"header\">Welcome To RSK + Next JS Truffle Box</h1>\n      <br />\n      <Form>\n        <Form.Group>\n          <NetworkData\n            mainnetBlock={mainnetBlock}\n            testnetBlock={testnetBlock}\n            simpleStorageValue={simpleStorageValue}\n            timestamp={timestamp}\n            loading={bestBlockLoading}\n          />\n        </Form.Group>\n        <br />\n        {updateComponent}\n      </Form>\n    </div>\n  );\n}\n\nexport default Index;\n","import React from 'react';\n\nconst styles = (\n  <style jsx>\n    {`\n      .body {\n        height: 100vh;\n        text-align: center;\n      }\n      .header {\n        font-family: 'Arial';\n      }\n      .rsk-logo {\n        content: url('static/images/logo.png');\n        height: 300px;\n      }\n    `}\n  </style>\n);\n\nexport default styles;\n","const Web3 = require('web3');\nconst SimpleStorageContract = require('../contracts/SimpleStorage.json');\nconst TimeStampContract = require('../contracts/TimeStamp.json');\n\nexport let web3Mainnet = new Web3(\n  new Web3.providers.HttpProvider('https://public-node.rsk.co'),\n);\nexport let web3Testnet = new Web3(\n  new Web3.providers.HttpProvider('https://public-node.testnet.rsk.co'),\n);\nexport async function getSimpleStorageValue() {\n  // To connect to RSK network update line 15 for one of the following providers:\n  // const provider = new Web3.providers.HttpProvider(\"https://public-node.testnet.rsk.co\");\n  // const provider = new Web3.providers.HttpProvider(\"https://public-node.rsk.co\");\n\n  const provider = new Web3.providers.HttpProvider(\"https://public-node.testnet.rsk.co\")\n  \n  const web3 = new Web3(provider);\n  const networkId = await web3.eth.net.getId();\n  const deployedNetwork = SimpleStorageContract.networks[networkId];\n  const contractInstance = new web3.eth.Contract(\n    SimpleStorageContract.abi,\n    deployedNetwork && deployedNetwork.address);\n\n  return await contractInstance.methods.get().call();\n}\n\n\nexport async function getTimeStamp() {\n  // To connect to RSK network update line 15 for one of the following providers:\n  // const provider = new Web3.providers.HttpProvider(\"https://public-node.testnet.rsk.co\");\n  // const provider = new Web3.providers.HttpProvider(\"https://public-node.rsk.co\");\n\n  const provider = new Web3.providers.HttpProvider(\"https://public-node.testnet.rsk.co\")\n\n  const web3 = new Web3(provider);\n  const networkId = await web3.eth.net.getId();\n  const deployedNetwork = TimeStampContract.networks[networkId];\n  const contractInstance = new web3.eth.Contract(\n      TimeStampContract.abi,\n      deployedNetwork && deployedNetwork.address);\n\n  return await contractInstance.methods.Time_call.call();\n}","module.exports = require(\"react\");","module.exports = require(\"react-bootstrap/Button\");","module.exports = require(\"react-bootstrap/Form\");","module.exports = require(\"react-bootstrap/Spinner\");","module.exports = require(\"web3\");"],"mappingsxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC3CA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}