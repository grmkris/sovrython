{"ast":null,"code":"const Web3 = require('web3');\n\nconst SimpleStorageContract = require('../contracts/SimpleStorage.json');\n\nexport let web3Mainnet = new Web3(new Web3.providers.HttpProvider('https://public-node.rsk.co'));\nexport let web3Testnet = new Web3(new Web3.providers.HttpProvider('https://public-node.testnet.rsk.co'));\nexport async function getSimpleStorageValue() {\n  // To connect to RSK network update line 15 for one of the following providers:\n  // const provider = new Web3.providers.HttpProvider(\"https://public-node.testnet.rsk.co\");\n  // const provider = new Web3.providers.HttpProvider(\"https://public-node.rsk.co\");\n  const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\");\n  const web3 = new Web3(provider);\n  const networkId = await web3.eth.net.getId();\n  const deployedNetwork = SimpleStorageContract.networks[networkId];\n  const contractInstance = new web3.eth.Contract(SimpleStorageContract.abi, deployedNetwork && deployedNetwork.address);\n  return await contractInstance.methods.get().call();\n}","map":{"version":3,"sources":["/home/kristjan/git/rsk-next/app/utils/web3-util.js"],"names":["Web3","require","SimpleStorageContract","web3Mainnet","providers","HttpProvider","web3Testnet","getSimpleStorageValue","provider","web3","networkId","eth","net","getId","deployedNetwork","networks","contractInstance","Contract","abi","address","methods","get","call"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,qBAAqB,GAAGD,OAAO,CAAC,iCAAD,CAArC;;AAEA,OAAO,IAAIE,WAAW,GAAG,IAAIH,IAAJ,CACvB,IAAIA,IAAI,CAACI,SAAL,CAAeC,YAAnB,CAAgC,4BAAhC,CADuB,CAAlB;AAGP,OAAO,IAAIC,WAAW,GAAG,IAAIN,IAAJ,CACvB,IAAIA,IAAI,CAACI,SAAL,CAAeC,YAAnB,CAAgC,oCAAhC,CADuB,CAAlB;AAGP,OAAO,eAAeE,qBAAf,GAAuC;AAC5C;AACA;AACA;AAEA,QAAMC,QAAQ,GAAG,IAAIR,IAAI,CAACI,SAAL,CAAeC,YAAnB,CAAgC,uBAAhC,CAAjB;AAEA,QAAMI,IAAI,GAAG,IAAIT,IAAJ,CAASQ,QAAT,CAAb;AACA,QAAME,SAAS,GAAG,MAAMD,IAAI,CAACE,GAAL,CAASC,GAAT,CAAaC,KAAb,EAAxB;AACA,QAAMC,eAAe,GAAGZ,qBAAqB,CAACa,QAAtB,CAA+BL,SAA/B,CAAxB;AACA,QAAMM,gBAAgB,GAAG,IAAIP,IAAI,CAACE,GAAL,CAASM,QAAb,CACvBf,qBAAqB,CAACgB,GADC,EAEvBJ,eAAe,IAAIA,eAAe,CAACK,OAFZ,CAAzB;AAIA,SAAO,MAAMH,gBAAgB,CAACI,OAAjB,CAAyBC,GAAzB,GAA+BC,IAA/B,EAAb;AACD","sourcesContent":["const Web3 = require('web3');\nconst SimpleStorageContract = require('../contracts/SimpleStorage.json');\n\nexport let web3Mainnet = new Web3(\n  new Web3.providers.HttpProvider('https://public-node.rsk.co'),\n);\nexport let web3Testnet = new Web3(\n  new Web3.providers.HttpProvider('https://public-node.testnet.rsk.co'),\n);\nexport async function getSimpleStorageValue() {\n  // To connect to RSK network update line 15 for one of the following providers:\n  // const provider = new Web3.providers.HttpProvider(\"https://public-node.testnet.rsk.co\");\n  // const provider = new Web3.providers.HttpProvider(\"https://public-node.rsk.co\");\n\n  const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:8545\")\n  \n  const web3 = new Web3(provider);\n  const networkId = await web3.eth.net.getId();\n  const deployedNetwork = SimpleStorageContract.networks[networkId];\n  const contractInstance = new web3.eth.Contract(\n    SimpleStorageContract.abi,\n    deployedNetwork && deployedNetwork.address);\n\n  return await contractInstance.methods.get().call();\n} \n"]},"metadata":{},"sourceType":"module"}