{"ast":null,"code":"var _jsxFileName = \"/home/kristjan/git/rsk-next/app/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../static/styles/index-styles';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Spinner from 'react-bootstrap/Spinner';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState, useEffect } from 'react';\nimport { web3Mainnet, web3Testnet, getSimpleStorageValue } from '../utils/web3-util';\n\nfunction Index(props) {\n  const UpdateButton = () => __jsx(Button, {\n    variant: \"success\",\n    onClick: () => updateNetworkData(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, \"Update\");\n\n  const {\n    0: mainnetBlock,\n    1: setMainnetBlock\n  } = useState(1);\n  const {\n    0: testnetBlock,\n    1: setTestnetBlock\n  } = useState(1);\n  const {\n    0: simpleStorageValue,\n    1: setSimpleStorageValue\n  } = useState(1);\n  const {\n    0: updateComponent,\n    1: setUpdateComponent\n  } = useState(__jsx(UpdateButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 58\n    }\n  }));\n  const {\n    0: bestBlockLoading,\n    1: setBestBlockLoading\n  } = useState(true);\n  useEffect(() => {\n    const initNetworkData = async () => {\n      const mainnetBestBlock = await web3Mainnet.eth.getBlockNumber();\n      const testnetBestBlock = await web3Testnet.eth.getBlockNumber();\n      const networkSimpleStorageValue = await getSimpleStorageValue();\n      setSimpleStorageValue(networkSimpleStorageValue.toNumber());\n      setMainnetBlock(mainnetBestBlock);\n      setTestnetBlock(testnetBestBlock);\n      setBestBlockLoading(false);\n    };\n\n    initNetworkData();\n  }, []);\n\n  async function updateNetworkData() {\n    setUpdateComponent(__jsx(Spinner, {\n      animation: \"border\",\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 24\n      }\n    }));\n    setMainnetBlock(await web3Mainnet.eth.getBlockNumber());\n    setTestnetBlock(await web3Testnet.eth.getBlockNumber());\n    setSimpleStorageValue((await getSimpleStorageValue()).toNumber());\n    setUpdateComponent(__jsx(UpdateButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 24\n      }\n    }));\n  }\n\n  const NetworkData = props => {\n    return __jsx(React.Fragment, null, !props.loading ? __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"Mainnet best block \", props.mainnetBlock), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }), __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \"Testnet best block \", props.testnetBlock), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }), __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, \"Simple Storage Value \", props.simpleStorageValue)) : __jsx(Spinner, {\n      animation: \"border\",\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, styles, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    className: \"rsk-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), __jsx(\"h1\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Welcome To RSK + Next JS Truffle Box\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(NetworkData, {\n    mainnetBlock: mainnetBlock,\n    testnetBlock: testnetBlock,\n    simpleStorageValue: simpleStorageValue,\n    loading: bestBlockLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), updateComponent));\n}\n\nexport default Index;","map":{"version":3,"sources":["/home/kristjan/git/rsk-next/app/pages/index.js"],"names":["styles","Button","Form","Spinner","useState","useEffect","web3Mainnet","web3Testnet","getSimpleStorageValue","Index","props","UpdateButton","updateNetworkData","mainnetBlock","setMainnetBlock","testnetBlock","setTestnetBlock","simpleStorageValue","setSimpleStorageValue","updateComponent","setUpdateComponent","bestBlockLoading","setBestBlockLoading","initNetworkData","mainnetBestBlock","eth","getBlockNumber","testnetBestBlock","networkSimpleStorageValue","toNumber","NetworkData","loading"],"mappings":"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","sourcesContent":["import styles from '../static/styles/index-styles';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Spinner from 'react-bootstrap/Spinner';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState, useEffect } from 'react';\nimport { web3Mainnet, web3Testnet, getSimpleStorageValue} from '../utils/web3-util';\n\nfunction Index(props) {\n  const UpdateButton = () => (\n    <Button variant=\"success\" onClick={() => updateNetworkData()}>\n      Update\n    </Button>\n  );\n\n  const [mainnetBlock, setMainnetBlock] = useState(1);\n  const [testnetBlock, setTestnetBlock] = useState(1);\n  const [simpleStorageValue, setSimpleStorageValue] = useState(1);\n  \n  const [updateComponent, setUpdateComponent] = useState(<UpdateButton />);\n  const [bestBlockLoading, setBestBlockLoading] = useState(true);\n\n  useEffect(() => {\n    const initNetworkData = async () => {\n      const mainnetBestBlock = await web3Mainnet.eth.getBlockNumber();\n      const testnetBestBlock = await web3Testnet.eth.getBlockNumber();\n      const networkSimpleStorageValue = await getSimpleStorageValue();\n      setSimpleStorageValue(networkSimpleStorageValue.toNumber());      \n      setMainnetBlock(mainnetBestBlock);\n      setTestnetBlock(testnetBestBlock);\n      setBestBlockLoading(false);\n    }\n    initNetworkData()\n  }, []);\n\n  async function updateNetworkData() {\n    setUpdateComponent(<Spinner animation=\"border\" variant=\"success\" />);\n    setMainnetBlock(await web3Mainnet.eth.getBlockNumber());\n    setTestnetBlock(await web3Testnet.eth.getBlockNumber());\n    setSimpleStorageValue((await getSimpleStorageValue()).toNumber());\n    setUpdateComponent(<UpdateButton />);\n  }\n\n  const NetworkData = props => {\n    return (\n      <>\n        {!props.loading ? (\n          <div>\n            <h4>Mainnet best block {props.mainnetBlock}</h4>\n            <br />\n            <h4>Testnet best block {props.testnetBlock}</h4>\n            <br />\n            <h4>Simple Storage Value {props.simpleStorageValue}</h4>\n          </div>\n        ) : (\n          <Spinner animation=\"border\" variant=\"success\" />\n        )}\n      </>\n    );\n  };\n\n  return (\n    <div className=\"body\">\n      {styles}\n      <div>\n        <img className=\"rsk-logo\" />\n      </div>\n      <h1 className=\"header\">Welcome To RSK + Next JS Truffle Box</h1>\n      <br />\n      <Form>\n        <Form.Group>\n          <NetworkData\n            mainnetBlock={mainnetBlock}\n            testnetBlock={testnetBlock}\n            simpleStorageValue={simpleStorageValue}\n            loading={bestBlockLoading}\n          />\n        </Form.Group>\n        <br />\n        {updateComponent}\n      </Form>\n    </div>\n  );\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}